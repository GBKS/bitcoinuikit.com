@use 'sass:math';

@mixin placeholder-color($color) {
    &:placeholder-shown {
        color: $color;
    }
    &::-webkit-input-placeholder {
        color: $color;
    }
    &::-moz-placeholder {
        color: $color;
    }
    &:-ms-input-placeholder {
        color: $color;
    }
}

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin retina() {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    @content;
  }
}

@mixin r($property, $minSize, $maxSize) {
  $multiplier: math.div($maxSize - $minSize, 1280 - 375)*100;
  $baseSize: $minSize - 3.75 * $multiplier + 'px';

  #{$property}: calc(#{$baseSize} + 1vw * #{$multiplier});

  @include media-query(large) {
    #{$property}: $maxSize+px;
  }
}

// Media queries

@mixin media-query($media-query) {
  @if $media-query == small {
    @media only screen and (max-width:($small-width - 1)) {
      @content;
    }
  }

  @if $media-query == medium {
    @media only screen and (min-width:$small-width) and (max-width:($large-width - 1)) {
      @content;
    }
  }

  @if $media-query == medium-up {
    @media only screen and (min-width:$small-width) {
      @content;
    }
  }

  @if $media-query == medium-down {
    @media only screen and (max-width:($large-width - 1)) {
      @content;
    }
  }

  @if $media-query == large {
    @media only screen and (min-width:$large-width) {
      @content;
    }
  }

  @if $media-query == medium-large {
    @media only screen and (min-width:$small-width) and (max-width:($huge-width - 1)) {
      @content;
    }
  }

  @if $media-query == huge {
    @media only screen and (min-width:$huge-width) {
      @content;
    }
  }
}